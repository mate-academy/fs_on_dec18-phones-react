{"version":3,"sources":["phones/PhonesCatalog.js","phones/PhoneViewer.js","phones/Filter.js","phones/ShoppingCart.js","phones/PhonesPage.js","App.js","serviceWorker.js","index.js"],"names":["PhonesCatalog","_ref","phones","onPhoneSelected","length","react_default","a","createElement","className","map","phone","key","id","age","href","onClick","alt","name","src","imageUrl","snippet","PhoneViewer","images","description","Filter","_this$props","this","props","onQueryChanged","onOrderChanged","_this$props2","query","orderBy","type","value","onChange","event","target","ORDER_BY_AGE","ORDER_BY_NAME","React","Component","ShoppingCart","_this","itemId","_itemsMap","data-element","BASE_URL","DEFAULT_ORDER_BY","PhonesPage","state","selectedPhone","_callee","response","regenerator_default","wrap","_context","prev","next","fetch","concat","sent","json","setState","stop","loadPhones","pattern","RegExp","preparedPhones","filter","test","sort","b","_this2","phones_Filter","phones_ShoppingCart","data-component","phones_PhoneViewer","phones_PhonesCatalog","App","PhonesPage_PhonesPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oRA0CeA,EAvCO,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,OAAQC,EAAsBF,EAAtBE,gBAC/B,OAAsB,IAAlBD,EAAOE,OACFC,EAAAC,EAAAC,cAAA,qBAIPF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACXN,EAAOO,IAAI,SAAAC,GAAK,OACfL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYG,IAAKD,EAAME,IACnCP,EAAAC,EAAAC,cAAA,cAAMG,EAAMG,IAAZ,MAEAR,EAAAC,EAAAC,cAAA,KACEC,UAAU,QACVM,KAAM,IAAMJ,EAAME,GAClBG,QAAS,WACPZ,EAAgBO,KAGlBL,EAAAC,EAAAC,cAAA,OACES,IAAKN,EAAMO,KACXC,IAtBO,qDAsBaR,EAAMS,YAI9Bd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,QAGFH,EAAAC,EAAAC,cAAA,KAAGO,KAAM,IAAMJ,EAAME,GAAIG,QAAS,kBAAMZ,EAAgBO,KACrDA,EAAMO,MAGTZ,EAAAC,EAAAC,cAAA,SAAIG,EAAMU,cCNLC,EA3BK,SAAApB,GAAA,IAAGS,EAAHT,EAAGS,MAAH,OAClBL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OACES,IAAKN,EAAMO,KACXT,UAAU,QACVU,IAAKR,EAAMY,OAAO,KAGpBjB,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,+BAEAF,EAAAC,EAAAC,cAAA,UAAKG,EAAMO,MACXZ,EAAAC,EAAAC,cAAA,SAAIG,EAAMa,aAEVlB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACXE,EAAMY,OAAOb,IAAI,SAAAU,GAAQ,OACxBd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OACES,IAAKN,EAAMO,KACXC,IAAKC,UCnBXK,mLACK,IAAAC,EACoCC,KAAKC,MAAxCC,EADDH,EACCG,eAAgBC,EADjBJ,EACiBI,eADjBC,EAEoBJ,KAAKC,MAAxBI,EAFDD,EAECC,MAAOC,EAFRF,EAEQE,QAEf,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SACE0B,KAAK,OACLC,MAAOH,EACPI,SAAU,SAACC,GACTR,EAAeQ,EAAMC,OAAOH,UAIhC7B,EAAAC,EAAAC,cAAA,UACEU,KAAK,UACLiB,MAAOF,EACPG,SAAU,SAACC,GACTP,EAAeO,EAAMC,OAAOH,SAG9B7B,EAAAC,EAAAC,cAAA,UAAQ2B,MAAOV,EAAOc,cAAtB,UACAjC,EAAAC,EAAAC,cAAA,UAAQ2B,MAAOV,EAAOe,eAAtB,oBAvBWC,IAAMC,WA8B3BjB,EAAOc,aAAe,MACtBd,EAAOe,cAAgB,OAGRf,QCbAkB,mLApBJ,IAAAC,EAAAjB,KACP,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,2BAEAF,EAAAC,EAAAC,cAAA,UACI,GAAGE,IAAI,SAAAmC,GAAM,OAEbvC,EAAAC,EAAAC,cAAA,UACIqC,EADJ,KACgBD,EAAKE,UAAUD,GAD/B,IAEEvC,EAAAC,EAAAC,cAAA,UAAQuC,eAAa,UAArB,iBAXaN,IAAMC,WCI3BM,EAAW,wDACXC,EAAmBxB,EAAOc,aAEXW,6MACnBC,MAAQ,CACNhD,OAAQ,GACRiD,cAAe,KACfpB,MAAO,GACPC,QAASgB,KAGX7C,sDAAkB,SAAAiD,EAAM1C,GAAN,IAAA2C,EAAAF,EAAA,OAAAG,EAAAhD,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACOC,MAAK,GAAAC,OAAIb,EAAJ,YAAAa,OAAuBlD,EAAME,GAA7B,UADZ,cACVyC,EADUG,EAAAK,KAAAL,EAAAE,KAAA,EAEYL,EAASS,OAFrB,OAEVX,EAFUK,EAAAK,KAIhBlB,EAAKoB,SAAS,CACZZ,cAAeA,IALD,wBAAAK,EAAAQ,SAAAZ,EAAA1B,kJAUhBA,KAAKuC,4LAIkBN,MAAK,GAAAC,OAAIb,EAAJ,sCAAtBM,kBACeA,EAASS,cAAxB5D,WAEqBwB,KAAKwB,MAAxBlB,YAASD,UACXmC,EAAU,IAAIC,OAAOpC,EAAO,KAE5BqC,EAAiBlE,EACpBmE,OAAO,SAAC3D,GAAD,OAAWwD,EAAQI,KAAK5D,EAAMO,QACrCsD,KAAK,SAACjE,EAAGkE,GAAJ,OAAUlE,EAAE0B,IAAYwC,EAAExC,GAAW,GAAK,IAElDN,KAAKqC,SAAS,CACZ7D,OAAQkE,wIAIH,IAAAK,EAAA/C,KACP,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWsC,eAAa,WACrCzC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACmE,EAAD,CACE3C,MAAOL,KAAKwB,MAAMnB,MAClBC,QAASN,KAAKwB,MAAMlB,QACpBJ,eAAgB,SAACG,GACf0C,EAAKV,SACH,CAAEhC,SACF,kBAAM0C,EAAKR,gBAIfpC,eAAgB,SAACG,GACfyC,EAAKV,SACH,CAAE/B,WACF,kBAAMyC,EAAKR,mBAMnB5D,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACoE,EAAD,QAIJtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKqE,iBAAe,gBACpBvE,EAAAC,EAAAC,cAAA,OAAKqE,iBAAe,gBAEnBlD,KAAKwB,MAAMC,cACV9C,EAAAC,EAAAC,cAACsE,EAAD,CAAanE,MAAOgB,KAAKwB,MAAMC,gBAE/B9C,EAAAC,EAAAC,cAACuE,EAAD,CACE5E,OAAQwB,KAAKwB,MAAMhD,OACnBC,gBAAiBuB,KAAKvB,4BA5EEqC,IAAMC,WCK/BsC,SAVH,WACV,OACE1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACyE,EAAD,UCIYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlF,EAAAC,EAAAC,cAACiF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.978adc2e.chunk.js","sourcesContent":["import React from 'react';\nconst BASE_IMG_URL = 'https://mate-academy.github.io/fs_on_dec18/public/';\n\nconst PhonesCatalog = ({ phones, onPhoneSelected }) => {\n  if (phones.length === 0) {\n    return <p>No pones</p>;\n  }\n\n  return (\n    <ul className=\"phones\">\n      {phones.map(phone => (\n        <li className=\"thumbnail\" key={phone.id}>\n          <b>[#{phone.age}] </b>\n\n          <a\n            className=\"thumb\"\n            href={'#' + phone.id}\n            onClick={() => {\n              onPhoneSelected(phone);\n            }}\n          >\n            <img\n              alt={phone.name}\n              src={BASE_IMG_URL + phone.imageUrl}\n            />\n          </a>\n\n          <div className=\"phones__btn-buy-wrapper\">\n            <button className=\"btn btn-success\">Add</button>\n          </div>\n\n          <a href={'#' + phone.id} onClick={() => onPhoneSelected(phone)}>\n            {phone.name}\n          </a>\n\n          <p>{phone.snippet}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default PhonesCatalog;\n","import React from 'react';\n\nconst PhoneViewer = ({ phone }) => (\n  <div className=\"PhoneViewer\">\n    <img\n      alt={phone.name}\n      className=\"phone\"\n      src={phone.images[0]}\n    />\n\n    <button>Back</button>\n    <button>Add to basket</button>\n\n    <h1>{phone.name}</h1>\n    <p>{phone.description}</p>\n\n    <ul className=\"phone-thumbs\">\n      {phone.images.map(imageUrl => (\n        <li>\n          <img\n            alt={phone.name}\n            src={imageUrl}\n          />\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default PhoneViewer;\n","import React from 'react';\n\nclass Filter extends React.Component {\n  render() {\n    const { onQueryChanged, onOrderChanged } = this.props;\n    const { query, orderBy } = this.props;\n\n    return (\n      <div className=\"Filter\">\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(event) => {\n            onQueryChanged(event.target.value);\n          }}\n        />\n\n        <select\n          name=\"orderBy\"\n          value={orderBy}\n          onChange={(event) => {\n            onOrderChanged(event.target.value);\n          }}\n        >\n          <option value={Filter.ORDER_BY_AGE}>by Age</option>\n          <option value={Filter.ORDER_BY_NAME}>by Name</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nFilter.ORDER_BY_AGE = 'age';\nFilter.ORDER_BY_NAME = 'name';\n\n\nexport default Filter;\n","import React from 'react';\n\nclass ShoppingCart extends React.Component {\n  render() {\n    return (\n      <div className=\"ShoppingCart\">\n        <h4>Shopping Cart</h4>\n\n        <ul>\n          { [].map(itemId => (\n\n            <li>\n              { itemId } ({ this._itemsMap[itemId] })\n              <button data-element=\"remove\">-</button>\n            </li>\n\n          )) }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default ShoppingCart;\n","import React from 'react';\nimport PhonesCatalog from './PhonesCatalog';\nimport PhoneViewer from './PhoneViewer';\nimport Filter from './Filter';\nimport ShoppingCart from './ShoppingCart';\n\nconst BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static';\nconst DEFAULT_ORDER_BY = Filter.ORDER_BY_AGE;\n\nexport default class PhonesPage extends React.Component {\n  state = {\n    phones: [],\n    selectedPhone: null,\n    query: '',\n    orderBy: DEFAULT_ORDER_BY\n  };\n\n  onPhoneSelected = async phone => {\n    const response = await fetch(`${BASE_URL}/phones/${phone.id}.json`);\n    const selectedPhone = await response.json();\n\n    this.setState({\n      selectedPhone: selectedPhone\n    });\n  };\n\n  componentDidMount() {\n    this.loadPhones();\n  }\n\n  async loadPhones() {\n    const response = await fetch(`${BASE_URL}/phones/phones.json`);\n    const phones = await response.json();\n\n    const { orderBy, query } = this.state;\n    const pattern = new RegExp(query, 'i');\n\n    const preparedPhones = phones\n      .filter((phone) => pattern.test(phone.name))\n      .sort((a, b) => a[orderBy] >= b[orderBy] ? 1 : -1);\n\n    this.setState({\n      phones: preparedPhones\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"PhonesPage\">\n        <div className=\"row\">\n          <div className=\"col-md-2\" data-element=\"sidebar\">\n            <section>\n              <Filter\n                query={this.state.query}\n                orderBy={this.state.orderBy}\n                onQueryChanged={(query) => {\n                  this.setState(\n                    { query },\n                    () => this.loadPhones()\n                  );\n                }}\n\n                onOrderChanged={(orderBy) => {\n                  this.setState(\n                    { orderBy },\n                    () => this.loadPhones()\n                  );\n                }}\n              />\n            </section>\n\n            <section>\n              <ShoppingCart/>\n            </section>\n          </div>\n\n          <div className=\"col-md-10\">\n            <div data-component=\"pagination1\"/>\n            <div data-component=\"pagination2\"/>\n\n            {this.state.selectedPhone ? (\n              <PhoneViewer phone={this.state.selectedPhone}/>\n            ) : (\n              <PhonesCatalog\n                phones={this.state.phones}\n                onPhoneSelected={this.onPhoneSelected}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PhonesPage from './phones/PhonesPage';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid\">\n        <PhonesPage />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}